# Tmux Navigator

This plugin is a repackaging of [Mislav Marohnić's][] tmux-navigator
configuration described in [this gist][]. When combined with a set of tmux
key bindings, the plugin will allow you to navigate seamlessly between
vim and tmux splits using a consistent set of hotkeys.

## Usage

By default the script provides the following mappings:

- `<ctrl-h>` => Left
- `<ctrl-j>` => Down
- `<ctrl-k>` => Up
- `<ctrl-l>` => Right

If you don't want the plugin to create any mappings, you can use the four
provided functions to define your own custom maps. Add the following to your
vimrc to use custom maps:

``` vim
let g:tmux_navigator_no_mappings = 1

nmap <silent> {Left-mapping} :TmuxNavigateLeft<cr>
nmap <silent> {Down-Mapping} :TmuxNavigateDown<cr>
nmap <silent> {Up-Mapping} :TmuxNavigateUp<cr>
nmap <silent> {Right-Mapping} :TmuxNavigateRight<cr>
```

*Note* Each instance of `{Left-Mapping}` or `{Down-Mapping}` must be replaced
in the above code with the desired mapping. Ie, the mapping for `<ctrl-h>` =>
Left would be created with `nmap <silent> <c-h> :TmuxNavigateLeft<cr>`.

## Installation

The main goal of this repo is to wrap Mislav's original plugin for easy
installation using [Pathogen][], [Vundle][], or similar plugin management
option to add it to Vim's runtime path.

For **Vundle**, add the following line to your vimrc:

``` vim
Bundle 'christoomey/vim-tmux-navigator'
```

Then from within Vim run the `:BundleInstall` command and Vundle will take care
of the rest.

For **Pathogen**, run the following commands in your shell:

``` bash
cd ~/.vim
mkdir -p bundle # creates bundle directory if it doesn't exist
cd bundles
git clone https://github.com/christoomey/vim-tmux-navigator.git
```
### Tmux Configuration

Add the following to your `tmux.conf` file to configure the tmux side of
this customization.

``` tmux
# Smart pane switching with awareness of vim splits
bind -n C-h if "[ $(tmux display -p '#{pane_current_command}') = vim ]" "send-keys C-h" "select-pane -L"
bind -n C-j if "[ $(tmux display -p '#{pane_current_command}') = vim ]" "send-keys C-j" "select-pane -D"
bind -n C-k if "[ $(tmux display -p '#{pane_current_command}') = vim ]" "send-keys C-k" "select-pane -U"
bind -n C-l if "[ $(tmux display -p '#{pane_current_command}') = vim ]" "send-keys C-l" "select-pane -R"
bind -n "C-\\" if "[ $(tmux display -p '#{pane_current_command}') = vim ]" "send-keys C-\\" "select-pane -l"
```

**NOTE**: This requires tmux v1.8 or higher.

[this gist]: https://gist.github.com/mislav/5189704
[Mislav Marohnić's]: http://mislav.uniqpath.com/
[Pathogen]: https://github.com/tpope/vim-pathogen
[Vundle]: https://github.com/gmarik/vundle
